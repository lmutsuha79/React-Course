import React, { useState, useEffect } from "react";

const JokeGenerator = () => {
  const [joke, setJoke] = useState(""); // State to store the joke
  const [loading, setLoading] = useState(false); // State to track loading
  const [error, setError] = useState(null); // State to track errors

  // Function to fetch a joke
  const fetchJoke = async () => {
    setLoading(true);
    setError(null); // Reset error before fetching
    try {
      const response = await fetch(
        "https://official-joke-api.appspot.com/random_joke"
      );
      if (!response.ok) {
        throw new Error("Failed to fetch joke.");
      }
      const data = await response.json();
      setJoke(`${data.setup} - ${data.punchline}`);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  // Fetch a joke when the component loads for the first time
  useEffect(() => {
    fetchJoke();
  }, []);

  return (
    <div
      style={{
        fontFamily: "Arial, sans-serif",
        textAlign: "center",
        padding: "20px",
        backgroundColor: "#f9f9f9",
        minHeight: "100vh",
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
      }}
    >
      <h1 style={{ marginBottom: "20px", color: "#4CAF50" }}>
        Random Joke Generator
      </h1>

      {/* Joke Display */}
      {loading ? (
        <p style={{ fontSize: "20px", color: "#999" }}>Loading...</p>
      ) : error ? (
        <p style={{ fontSize: "20px", color: "red" }}>{error}</p>
      ) : (
        <p
          style={{
            fontSize: "24px",
            color: "#333",
            marginBottom: "30px",
            backgroundColor: "#fff",
            padding: "20px",
            borderRadius: "8px",
            boxShadow: "0 4px 10px rgba(0, 0, 0, 0.1)",
          }}
        >
          {joke}
        </p>
      )}

      {/* Generate New Joke Button */}
      <button
        onClick={fetchJoke}
        style={{
          padding: "10px 20px",
          fontSize: "16px",
          border: "none",
          borderRadius: "8px",
          backgroundColor: "#4CAF50",
          color: "#fff",
          cursor: "pointer",
          boxShadow: "0 4px 6px rgba(0, 0, 0, 0.1)",
          transition: "background-color 0.3s ease",
        }}
        onMouseEnter={(e) => (e.target.style.backgroundColor = "#45a049")}
        onMouseLeave={(e) => (e.target.style.backgroundColor = "#4CAF50")}
      >
        Generate New Joke
      </button>
    </div>
  );
};
export default JokeGenerator;
